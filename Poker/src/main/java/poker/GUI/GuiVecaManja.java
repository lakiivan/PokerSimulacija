/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package poker.GUI;

import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JRootPane;
import poker.domain.Card;
import poker.logic.Calculate;
import poker.logic.VecaManja;
import poker.logic.WinningHands;

/**
 *
 * @author Ivan Local
 */
public class GuiVecaManja extends javax.swing.JFrame {

    private Calculate calculate;
    private int currAmount;
    private boolean isVecaGuessed;
    private boolean isManjaGuessed;
    private boolean makeFrameDisabled;

    /**
     * Creates new form GuiVecaManja
     */
    public GuiVecaManja() {
        initComponents();
        this.isManjaGuessed = false;
        this.isVecaGuessed = false;
        this.makeFrameDisabled = false;
        //this.setUndecorated(true);
        //this.getRootPane().setWindowDecorationStyle(JRootPane.NONE);
    }

    public void initializaCalculate(Calculate calculate, int winAmount) {
        this.calculate = calculate;
        this.currAmount = winAmount;
        String currentAmount = String.valueOf(this.currAmount);
        this.winningAmount.setText(currentAmount);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        veca = new javax.swing.JButton();
        randomCardIcon = new javax.swing.JButton();
        manja = new javax.swing.JButton();
        splitBet = new javax.swing.JButton();
        quit = new javax.swing.JButton();
        winningAmount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        veca.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        veca.setText("VECA");
        veca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        veca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vecaActionPerformed(evt);
            }
        });

        manja.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        manja.setText("MANJA");
        manja.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        manja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manjaActionPerformed(evt);
            }
        });

        splitBet.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        splitBet.setText("Split bet");
        splitBet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                splitBetActionPerformed(evt);
            }
        });

        quit.setBackground(new java.awt.Color(204, 0, 0));
        quit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        quit.setText("QUIT");
        quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitActionPerformed(evt);
            }
        });

        winningAmount.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(621, 621, 621)
                        .addComponent(splitBet, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(manja, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                        .addComponent(randomCardIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(veca, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                    .addComponent(winningAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(71, 71, 71))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addComponent(quit, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(1031, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(winningAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(splitBet, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(veca, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(randomCardIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manja, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(quit, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addGap(588, 588, 588)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void manjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manjaActionPerformed
        // TODO add your handling code here:
        if (this.makeFrameDisabled == false) {
            this.isManjaGuessed = true;
            this.isVecaGuessed = false;
            System.out.println("Manja guessed is " + this.isManjaGuessed);
            calculateVecaManjaIshod();
        } else {
            System.out.println("GAME IS OVER PLEASE PRESS QUIT");
        }

    }//GEN-LAST:event_manjaActionPerformed

    private void splitBetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_splitBetActionPerformed
        // TODO add your handling code here:
        if (this.currAmount / 2 > 5) {
            this.currAmount = this.currAmount / 2;
            String currentAmount = String.valueOf(this.currAmount);
            this.calculate.addToBalance(this.currAmount);
            this.winningAmount.setText(currentAmount);
        } else {
            System.out.println("It is not possible to split amount less than 10!");
        }
    }//GEN-LAST:event_splitBetActionPerformed

    private void quitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitActionPerformed
        // TODO add your handling code here:
        this.calculate.addToBalance(this.currAmount);
        this.setVisible(false);
    }//GEN-LAST:event_quitActionPerformed

    private void vecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vecaActionPerformed
        // TODO add your handling code here:
        if (this.makeFrameDisabled == false) {
            this.isVecaGuessed = true;
            System.out.println("Veca guessed is " + this.isVecaGuessed);
            calculateVecaManjaIshod();
        } else {
            System.out.println("GAME IS OVER PLEASE PRESS QUIT");
        }
    }//GEN-LAST:event_vecaActionPerformed

    private void calculateVecaManjaIshod() {
        Card randomCard = calculate.getDeal().getRandomCard();
        setIconRandomCard(randomCard);
        VecaManja vm = new VecaManja(isVecaGuessed, randomCard, this.currAmount);
        this.currAmount = vm.calculateAmount();
        //ukoliko se dostigne max limit balance automat se blokira kraj igre sa porukom dobili sete max npr. 120000
        if (this.currAmount > this.calculate.getMaxAmount()) {
            // proveriti da li ima para da se igra jos, ako je winning amount 0 izlazi se sa 0
            System.out.println("YOU REACHED MAXIMUM AMOUNT OF " + this.currAmount);
        } else if (this.currAmount == 0) {
            this.makeFrameDisabled = true;
            System.out.println("YOU LOOSE");
        }
        String currentAmount = String.valueOf(this.currAmount);
        this.winningAmount.setText(currentAmount);
    }

    private void setIconRandomCard(Card randomCard) {
        String location = randomCard.getImageLocation();
        Icon icon = getCardImage(location);
        this.randomCardIcon.setIcon(icon);
    }

    //pronalazi sliku kartte na osnovu string loakcije
    private Icon getCardImage(String locationURL) {
        try {
            File file = new File(locationURL);
            BufferedImage originalImage = ImageIO.read(file);
            int height = originalImage.getHeight();
            int width = originalImage.getWidth();
            //System.out.println("Original image size is height " + height + " width is " + width);
            Icon card = new ImageIcon(locationURL);
            return card;
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiVecaManja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiVecaManja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiVecaManja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiVecaManja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new GuiVecaManja().setVisible(true);
                GuiVecaManja guiVeca = new GuiVecaManja();
                guiVeca.setUndecorated(true);
                guiVeca.getRootPane().setWindowDecorationStyle(JRootPane.NONE);
                guiVeca.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton manja;
    private javax.swing.JButton quit;
    private javax.swing.JButton randomCardIcon;
    private javax.swing.JButton splitBet;
    private javax.swing.JButton veca;
    private javax.swing.JLabel winningAmount;
    // End of variables declaration//GEN-END:variables
}
